{"version":3,"sources":["components/UI/Header/header.module.css","components/UI/Form/Form.tsx","components/Logic/FormToDo/FormToDo.tsx","utils/generateRandomString.ts","components/UI/Item/Item.tsx","components/Logic/ToDoItem/ToDoItem.tsx","components/UI/Header/Header.jsx","App.tsx","reducer/reducer.ts","reducer/defaultStore.ts","index.tsx","components/UI/Item/item.module.css","components/UI/Form/form.module.css"],"names":["module","exports","Form","inputValue","addToDo","hendelChange","className","styles","form","onChange","event","input","value","onClick","preventDefault","button","FormToDo","inputToDo","useSelector","store","inputTodo","todoList","dispatch","useDispatch","type","text","isCompleted","todoId","Math","random","toString","substring","target","Item","isCheck","idCheckbox","onChangeCheckbox","onDelet","container","id","checked","checkbox","label","htmlFor","ToDoItem","todos","state","todo","filter","item","toComplited","deletTodo","Header","h1","App","listTodo","map","defaultState","createStore","action","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17ba416b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__17jWP\",\"h1\":\"header_h1__2BMK5\"};","import React, { ChangeEvent, SyntheticEvent } from \"react\";\r\nimport styles from './form.module.css'\r\n\r\ninterface IForm {\r\n  inputValue: string,\r\n  addToDo:()=> void,\r\n  hendelChange: (event:ChangeEvent<HTMLInputElement>)=> void,\r\n}\r\n\r\nexport function Form({inputValue, addToDo, hendelChange}:IForm){\r\n  return(\r\n    <form className={styles.form}>\r\n      <input onChange={(event)=>hendelChange(event)} className={styles.input} value={inputValue}></input>\r\n      <button onClick={(event)=>{\r\n        event.preventDefault();\r\n        addToDo();\r\n      }} className={styles.button}>Add ToDo</button>\r\n    </form>\r\n  );\r\n}","import React, { ChangeEvent, FormEvent, SyntheticEvent } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TDefaultState, TTodo } from \"../../../reducer/reducer\";\r\nimport { generateRandomString } from \"../../../utils/generateRandomString\";\r\nimport { Form } from \"../../UI/Form/Form\";\r\n\r\nexport function FormToDo() {\r\n  const inputToDo = useSelector<TDefaultState, string>(store => store.inputTodo);\r\n  const todoList = useSelector<TDefaultState,Array<TTodo>>(store => store.todoList)\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  function addToDo() {\r\n    dispatch({type: 'UPDATE_TODO', todoList:[\r\n      ...todoList,\r\n      {\r\n        text: inputToDo,\r\n        isCompleted: false,\r\n        todoId: generateRandomString()\r\n      }\r\n    ]})\r\n  }\r\n\r\n  function handleChange(event:ChangeEvent<HTMLInputElement>){\r\n    dispatch({type: 'INPUT_TODO', inputTodo: event.target.value})\r\n  }\r\n  \r\n  return(\r\n    <Form inputValue={inputToDo} addToDo={()=>addToDo()} hendelChange={handleChange}/>\r\n  );\r\n}","export const generateRandomString = () => Math.random().toString(36).substring(2,15); //Генерируем случайные строки в js","import React from \"react\";\r\nimport styles from './item.module.css';\r\ninterface IProps {\r\n  text:string, \r\n  isCheck:boolean, \r\n  idCheckbox: string,\r\n  onChangeCheckbox: () => void,\r\n  onDelet: () => void\r\n}\r\n\r\nexport function Item({text,isCheck, idCheckbox, onChangeCheckbox, onDelet}:IProps){\r\n  return(\r\n    <div className={styles.container}>\r\n      <input onChange={onChangeCheckbox} type='checkbox' id={idCheckbox} checked={isCheck} className={styles.checkbox}/>\r\n      <label className={styles.label} htmlFor={idCheckbox}/>\r\n      <label className={styles.text} htmlFor={idCheckbox}>{text}</label>\r\n      <button onClick={onDelet}>Del</button>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TDefaultState, TTodo } from \"../../../reducer/reducer\";\r\nimport { Item } from \"../../UI/Item/Item\";\r\n\r\ninterface IProps {\r\n  text: string,\r\n  isCheck: boolean,\r\n  idCheckbox: string,\r\n}\r\n\r\nexport function ToDoItem({text, isCheck, idCheckbox}:IProps){\r\n  const todos = useSelector<TDefaultState ,Array<TTodo>>(state => state.todoList);\r\n  const dispatch = useDispatch();\r\n\r\n  function deletTodo(){\r\n    const todo = todos.filter(item => item.todoId !== idCheckbox);\r\n    dispatch({type: 'UPDATE_TODO', todoList: [...todo]})\r\n  }\r\n  function toComplited(){\r\n    const todo = todos.filter(item => item.todoId === idCheckbox);\r\n    todo[0].isCompleted= !todo[0].isCompleted;\r\n    dispatch({type: 'UPDATE_TODO', todoList: [...todos]})\r\n  }\r\n  return(\r\n    <Item \r\n      text={text} \r\n      isCheck={isCheck} \r\n      idCheckbox={idCheckbox} \r\n      onChangeCheckbox={()=>toComplited()}\r\n      onDelet ={()=>deletTodo()}\r\n    />\r\n  );\r\n}","import React from \"react\";\r\nimport styles from './header.module.css';\r\n\r\nexport function Header() {\r\n  return(\r\n    <div className={styles.container}>\r\n      <h1 className={styles.h1}>ToDo</h1>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormToDo } from './components/Logic/FormToDo/FormToDo';\nimport { ToDoItem } from './components/Logic/ToDoItem/ToDoItem';\nimport { Header } from './components/UI/Header/Header';\nimport { TDefaultState, TTodo } from './reducer/reducer';\n\n\n\n\nexport function App() {\n  const listTodo = useSelector<TDefaultState, Array<TTodo>>(store => store.todoList)\n  return (\n    <div>\n      <Header/>\n      <FormToDo/>\n      {listTodo.map(todo => <ToDoItem key={todo.todoId} text={todo.text} isCheck={todo.isCompleted} idCheckbox={todo.todoId} />)}\n    </div>\n  );\n}\n\n\n","import { Reducer } from \"redux\";\r\nimport { ArrTodo } from \"./defaultStore\";\r\n\r\nexport type TTodo = {\r\n  text: string,\r\n  isCompleted: boolean,\r\n  todoId: string,\r\n}\r\n\r\nexport type TDefaultState ={\r\n  inputTodo: string,\r\n  todoList: Array<TTodo>\r\n}\r\n\r\nconst defaultState = {\r\n  inputTodo: '',\r\n  todoList: ArrTodo\r\n}\r\n\r\nexport const rootReducer: Reducer<any,any> = (state = defaultState, action) => {\r\n    switch(action.type){\r\n      case 'UPDATE_TODO':\r\n        return {\r\n          ...state,\r\n          inputTodo: '',\r\n          todoList: action.todoList,\r\n        }\r\n      case 'INPUT_TODO':\r\n        return {\r\n          ...state,\r\n          inputTodo: action.inputTodo,\r\n        }\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n}","import { TTodo } from \"./reducer\";\r\n\r\nexport const ArrTodo:Array<TTodo> = [\r\n  {\r\n    text: 'todo1',\r\n    isCompleted : false,\r\n    todoId: '1'\r\n  },\r\n  {\r\n    text: 'todo2',\r\n    isCompleted : false,\r\n    todoId: '2'\r\n  },\r\n  {\r\n    text: 'todo3',\r\n    isCompleted : false,\r\n    todoId: '3'\r\n  },\r\n  {\r\n    text: 'todo4',\r\n    isCompleted : false,\r\n    todoId: '4'\r\n  }\r\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {App} from './App';\nimport { rootReducer } from './reducer/reducer';\n\n\nconst store = createStore(rootReducer, composeWithDevTools())\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"item_container__sP-sP\",\"text\":\"item_text__2-kJt\",\"checkbox\":\"item_checkbox__2jZO5\",\"label\":\"item_label__3_hqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__NqOqU\",\"input\":\"form_input__3Lx6j\",\"button\":\"form_button__151px\"};"],"sourceRoot":""}