{"version":3,"sources":["components/UI/Header/header.module.css","app.module.css","reducer/reducer.ts","reducer/defaultStore.ts","components/UI/Form/Form.tsx","components/Logic/FormToDo/FormToDo.tsx","utils/generateRandomString.ts","components/UI/Item/Item.tsx","components/Logic/ToDoItem/ToDoItem.tsx","components/UI/Header/Header.jsx","App.tsx","index.tsx","components/UI/Item/item.module.css","components/UI/Form/form.module.css"],"names":["module","exports","defaultState","inputTodo","todoList","text","isCompleted","todoId","UPDATE_TODO","INPUT_TODO","Form","inputValue","addToDo","hendelChange","className","styles","form","onChange","event","input","value","onClick","preventDefault","button","FormToDo","inputToDo","useSelector","store","dispatch","useDispatch","type","Math","random","toString","substring","createNewTodo","target","Item","isCheck","idCheckbox","onChangeCheckbox","onDelet","container","id","checked","checkbox","label","htmlFor","del","ToDoItem","todos","state","todo","filter","item","toComplited","deletTodo","Header","h1","App","listTodo","map","createStore","action","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8b91441.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__17jWP\",\"h1\":\"header_h1__2BMK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__UDgaZ\"};","import { Reducer } from \"redux\";\r\nimport { generateRandomString } from \"../utils/generateRandomString\";\r\nimport { ArrTodo } from \"./defaultStore\";\r\n\r\nexport type TTodo = {\r\n  text: string,\r\n  isCompleted: boolean,\r\n  todoId: string,\r\n}\r\n\r\nexport type TDefaultState ={\r\n  inputTodo: string,\r\n  todoList: Array<TTodo>\r\n}\r\n\r\nconst defaultState = {\r\n  inputTodo: '',\r\n  todoList: ArrTodo\r\n}\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const createNewTodo = (todoList:TTodo[], inputToDo: string) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    todoList: [\r\n      ...todoList,\r\n      {\r\n        text: inputToDo,\r\n        isCompleted: false,\r\n        todoId: generateRandomString()\r\n      }\r\n    ]\r\n  }\r\n} \r\n\r\nexport const INPUT_TODO = 'INPUT_TODO';\r\nexport const createInputTodo = (value:string) => {\r\n  return {\r\n    type: INPUT_TODO,\r\n    inputTodo: value,\r\n  }\r\n}\r\nexport const rootReducer: Reducer<any,any> = (state = defaultState, action) => {\r\n    switch(action.type){\r\n      case UPDATE_TODO:\r\n        return {\r\n          ...state,\r\n          inputTodo: '',\r\n          todoList: action.todoList,\r\n        }\r\n      case INPUT_TODO:\r\n        return {\r\n          ...state,\r\n          inputTodo: action.inputTodo,\r\n        }\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n}","import { TTodo } from \"./reducer\";\r\n\r\nexport const ArrTodo:Array<TTodo> = [\r\n  {\r\n    text: 'todo1',\r\n    isCompleted : false,\r\n    todoId: '1'\r\n  },\r\n  {\r\n    text: 'todo2',\r\n    isCompleted : false,\r\n    todoId: '2'\r\n  },\r\n  {\r\n    text: 'todo3',\r\n    isCompleted : false,\r\n    todoId: '3'\r\n  },\r\n  {\r\n    text: 'todo4',\r\n    isCompleted : false,\r\n    todoId: '4'\r\n  }\r\n]","import React, { ChangeEvent, SyntheticEvent } from \"react\";\r\nimport styles from './form.module.css'\r\n\r\ninterface IForm {\r\n  inputValue: string,\r\n  addToDo:()=> void,\r\n  hendelChange: (event:ChangeEvent<HTMLInputElement>)=> void,\r\n}\r\n\r\nexport function Form({inputValue, addToDo, hendelChange}:IForm){\r\n  return(\r\n    <form className={styles.form}>\r\n      <input \r\n        onChange={(event)=>hendelChange(event)} \r\n        className={styles.input} \r\n        value={inputValue}\r\n        ></input>\r\n      \r\n      <button onClick={(event)=>{\r\n        event.preventDefault();\r\n        addToDo();\r\n      }} className={styles.button}>Add ToDo</button>\r\n    </form>\r\n  );\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createInputTodo, createNewTodo, TDefaultState, TTodo,} from \"../../../reducer/reducer\";\r\nimport { Form } from \"../../UI/Form/Form\";\r\n\r\nexport function FormToDo() {\r\n  const inputToDo = useSelector<TDefaultState, string>(store => store.inputTodo);\r\n  const todoList = useSelector<TDefaultState,Array<TTodo>>(store => store.todoList)\r\n  const dispatch = useDispatch();\r\n\r\n \r\n  function addToDo() {\r\n    dispatch(createNewTodo(todoList, inputToDo))\r\n  }\r\n \r\n  function handleChange(event:ChangeEvent<HTMLInputElement>){\r\n    dispatch(createInputTodo(event.target.value))\r\n  }\r\n  \r\n  return(\r\n    <Form inputValue={inputToDo}  addToDo={()=>addToDo()} hendelChange={handleChange}/>\r\n  );\r\n}","export const generateRandomString = () => Math.random().toString(36).substring(2,15); //Генерируем случайные строки в js","import React from \"react\";\r\nimport styles from './item.module.css';\r\ninterface IProps {\r\n  text:string, \r\n  isCheck:boolean, \r\n  idCheckbox: string,\r\n  onChangeCheckbox: () => void,\r\n  onDelet: () => void\r\n}\r\n\r\nexport function Item({text,isCheck, idCheckbox, onChangeCheckbox, onDelet}:IProps){\r\n  return(\r\n    <div className={styles.container}>\r\n      <input onChange={onChangeCheckbox} type='checkbox' id={idCheckbox} checked={isCheck} className={styles.checkbox}/>\r\n      <label className={styles.label} htmlFor={idCheckbox}/>\r\n      <label className={styles.text} htmlFor={idCheckbox} >{text}</label>\r\n      <div className={styles.del} onClick={onDelet}>Del</div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TDefaultState, TTodo, UPDATE_TODO } from \"../../../reducer/reducer\";\r\nimport { Item } from \"../../UI/Item/Item\";\r\n\r\ninterface IProps {\r\n  text: string,\r\n  isCheck: boolean,\r\n  idCheckbox: string,\r\n}\r\n\r\nexport function ToDoItem({text, isCheck, idCheckbox}:IProps){\r\n  const todos = useSelector<TDefaultState ,Array<TTodo>>(state => state.todoList);\r\n  const dispatch = useDispatch();\r\n\r\n  function deletTodo(){\r\n    const todo = todos.filter(item => item.todoId !== idCheckbox);\r\n    dispatch({type: UPDATE_TODO, todoList: [...todo]})\r\n  }\r\n  function toComplited(){\r\n    const todo = todos.filter(item => item.todoId === idCheckbox);\r\n    todo[0].isCompleted= !todo[0].isCompleted;\r\n    dispatch({type: UPDATE_TODO, todoList: [...todos]})\r\n  }\r\n  return(\r\n    <Item \r\n      text={text} \r\n      isCheck={isCheck} \r\n      idCheckbox={idCheckbox} \r\n      onChangeCheckbox={()=>toComplited()}\r\n      onDelet ={()=>deletTodo()}\r\n    />\r\n  );\r\n}","import React from \"react\";\r\nimport styles from './header.module.css';\r\n\r\nexport function Header() {\r\n  return(\r\n    <div className={styles.container}>\r\n      <h1 className={styles.h1}>ToDo</h1>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormToDo } from './components/Logic/FormToDo/FormToDo';\nimport { ToDoItem } from './components/Logic/ToDoItem/ToDoItem';\nimport { Header } from './components/UI/Header/Header';\nimport { TDefaultState, TTodo } from './reducer/reducer';\nimport styles from './app.module.css';\n\n\n\nexport function App() {\n  const listTodo = useSelector<TDefaultState, Array<TTodo>>(store => store.todoList)\n  return (\n    <div className={styles.container}>\n      <Header/>\n      <FormToDo/>\n      {listTodo.map(todo => <ToDoItem key={todo.todoId} text={todo.text} isCheck={todo.isCompleted} idCheckbox={todo.todoId} />)}\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {App} from './App';\nimport { rootReducer } from './reducer/reducer';\nimport './global.css'\n\nconst store = createStore(rootReducer, composeWithDevTools())\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"item_container__sP-sP\",\"text\":\"item_text__2-kJt\",\"checkbox\":\"item_checkbox__2jZO5\",\"label\":\"item_label__3_hqm\",\"del\":\"item_del__iWXK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__NqOqU\",\"input\":\"form_input__3Lx6j\",\"button\":\"form_button__151px\"};"],"sourceRoot":""}